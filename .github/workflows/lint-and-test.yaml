name: Lint and test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GO_VERSION: 1.24.6

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - id: set-modules
        run: echo "modules=$(go list -m -json | jq -s '.' | jq -c '[.[].Dir]')" >> $GITHUB_OUTPUT

  golangci-lint:
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Install dependencies
        run: go mod tidy
        working-directory: ${{ matrix.modules }}
      - name: golangci-lint ${{ matrix.modules }}
        uses: golangci/golangci-lint-action@v6
        with:
          working-directory: ${{ matrix.modules }}
          args: -v --timeout 5m
          version: v2.3.1
  test:
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Install dependencies
        run: go mod tidy
        working-directory: ${{ matrix.modules }}
      - name: test ${{ matrix.modules }}
        run: cd ${{ matrix.modules }} && make test
